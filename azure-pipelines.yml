trigger: none
pr: none

parameters:
  - name: SPLITS
    type: object
    default:
      - Step: 1
        NonProd: 1
        Prod: 99
      - Step: 2
        DependsOn: 1
        NonProd: 50
        Prod: 50

stages:
- stage: Init
  jobs:
    - job: init
      steps:
        - script: echo hi

- ${{ each split in parameters.SPLITS }}:
  - stage: A${{split.Step}}
    dependsOn:
      - Init
      - ${{ if ne(split.Step, 1)}}:
        - A${{ split.DependsOn }}
    jobs:
    - job: A${{split.Step}}
      steps:
      - script: |
          echo ${{ split.Step }}
          echo ${{ split.Prod }}
          echo ${{ split.NonProd }}
          if [[ ${{split.Step}} == 2 ]]; then
            exit 1
          fi

- stage: Revert
  dependsOn:
    - Init
    - ${ each split in parameters.SPLITS }:
      - TrafficShape${{ split.Step }}
  condition: not(succeeded())
  jobs:
    - job: B
      steps:
        - script: echo done

- stage: Finalize
  dependsOn:
    - Init
    - ${ each split in parameters.SPLITS }:
      - TrafficShape${{ split.Step }}
  condition: succeeded()
  jobs:
    - job: C
      steps:
        - script: echo done